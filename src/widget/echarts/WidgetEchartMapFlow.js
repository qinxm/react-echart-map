/** 地图流向图 */
import React from 'react';
import ReactEcharts from 'echarts-for-react'  

import * as echarts from 'echarts';

import WidgetAjax from './../WidgetAjax'
import WidgetEchartConfig from './WidgetEchartConfig'

class WidgetEchartMapFlow extends React.Component
{
    constructor( props )
    {
        super(props);

        this.state = {
            data : props.data,
            option : props.option,
            width : 0,
            height : 0,
            geoCoordMap : {
				'西藏':[88.11,30.97], '上海市':[121.48,31.22], '福建省':[118.13,26.08], '广西':[108.33,23.84], '广东省':[113.23,23.66],'山西省':[112.53,37.87], '云南省':[101.73,24.84], '海南省':[109.65,19.02], '辽宁省':[123.18,41.2], '吉林省':[126.35,43.38],
				'宁夏':[106.27,37.47], '江西省':[115.89,28.68], '青海省':[95.74,35.6], '内蒙古':[108.65,40.82], '四川省':[102.66,30.67],'陕西省':[108.95,34.27], '重庆市':[106.54,29.59], '江苏省':[119.78,33.04], '贵州省':[106.71,26.57], '北京市':[116.46,40.2],
				'浙江省':[120.19,29.26], '新疆':[86.06,41.68], '山东省':[117.5,36.55], '甘肃省':[103.73,36.03], '天津市':[117.4,39.33],'河南省':[113.65,33.76], '黑龙江省':[126.63,47.75], '河北省':[115.48,38.53], '湖南省':[112.1,28.1], '安徽省':[117.27,31.86],
				'湖北省':[112.31,31.2], 
				
				'东城区':[116.418757,39.917544], '西城区':[116.366794,39.915309], '朝阳区':[116.586409,39.921489], '丰台区':[116.286968,39.863642],'石景山区':[116.195445,39.914601],'海淀区':[116.310316,40.036074], '门头沟区':[115.865381,39.986183], '房山区':[115.849457,39.734535],'通州区':[116.663603,39.707486], '顺义区':[116.653525,40.128936], 
				'昌平区':[116.235906,40.218085], '大兴区':[116.348233,39.572508],'怀柔区':[116.637122,40.664272], '平谷区':[117.112335,40.144783], '密云区':[116.843352,40.377362], '延庆区':[115.985006,40.465325],
				
                '哈尔滨市':[127.966759,45.648633], '深圳市':[114.143183,22.643373],
                 
				'阿富汗' : [69.11,34.28],'安哥拉' : [13.15,-8.50],'阿尔巴尼亚' : [19.49,41.18],'阿联酋' : [54.22,24.28],'阿根廷' : [-60.00,-36.30],'亚美尼亚' : [44.31,40.10],'澳大利亚' : [149.08,-35.15],'奥地利' : [16.22,48.12],'阿塞拜疆' : [49.56,40.29],'布隆迪' : [29.18,-3.16],
				'比利时' : [4.21,50.51],'贝宁' : [2.42,6.23],'布基纳法索' : [-1.30,12.15],'孟加拉国' : [90.26,23.43],'保加利亚' : [23.20,42.45],'巴哈马' : [-77.20,25.05],'波黑' : [18.26,43.52],'白俄罗斯' : [27.30,53.52],'伯利兹' : [-88.30,17.18],'玻利维亚' : [-68.10,-16.20],
				'巴西' : [-47.55,-15.47],'文莱' : [115.00,4.52],'不丹' : [89.45,27.31],'博茨瓦纳' : [25.57,-24.45],'中非' : [18.35,4.23],'加拿大' : [-75.42,45.27],'瑞士' : [7.28,46.57],'智利' : [-70.40,-33.24],'中国' : [116.20,39.55],'科特迪瓦' : [-5.17,6.49],
				'喀麦隆' : [11.35,3.50],'刚果' : [15.12,-4.09],'民主刚果' : [15.15,-4.20],'哥伦比亚' : [-74.00,4.34],'哥斯达黎加' : [-84.02,9.55],'古巴' : [-82.22,23.08],'塞浦路斯' : [33.25,35.10],'捷克' : [14.22,50.05],'德国' : [13.25,52.30],'吉布提' : [42.20,11.08],
				'丹麦' : [12.34,55.41],'多米尼加共和国' : [-69.59,18.30],'阿尔及利亚' : [3.08,36.42],'厄瓜多尔' : [-78.35,-0.15],'埃及' : [31.14,30.01],'厄立特里亚' : [38.55,15.19],'西班牙' : [-3.45,40.25],'爱沙尼亚' : [24.48,59.22],'埃塞俄比亚' : [38.42,9.02],'芬兰' : [25.03,60.15],
				'斐济' : [178.30,-18.06],'法国' : [2.20,48.50],'加蓬' : [9.26,0.25],'格鲁吉亚' : [44.50,41.43],'加纳' : [-0.06,5.35],'几内亚' : [-13.49,9.29],'冈比亚' : [-16.40,13.28],'几内亚比绍' : [-15.45,11.45],'赤道几内亚' : [8.50,3.45],'希腊' : [23.46,37.58],
				'危地马拉' : [-90.22,14.40],'圭亚那' : [-58.12,6.50],'洪都拉斯' : [-87.14,14.05],'克罗地亚' : [15.58,45.50],'海地' : [-72.20,18.40],'匈牙利' : [19.05,47.29],'印度尼西亚' : [106.49,-6.09],'印度' : [77.13,28.37],'爱尔兰' : [-6.15,53.21],'伊朗' : [51.30,35.44],
				'伊拉克' : [44.30,33.20],'冰岛' : [-21.57,64.10],'以色列' : [35.12,31.47],'意大利' : [12.29,41.54],'牙买加' : [-76.50,18.00],'约旦' : [35.52,31.57],'哈萨克斯坦' : [71.30,51.10],'肯尼亚' : [36.48,-1.17],'吉尔吉斯斯坦' : [74.46,42.54],'柬埔寨' : [104.55,11.33],
				'韩国' : [126.58,37.31],'日本' : [138.18,36.31],'科威特' : [48.00,29.30],'老挝' : [102.36,17.58],'黎巴嫩' : [35.31,33.53],'利比里亚' : [-10.47,6.18],'利比亚' : [13.07,32.49],'莱索托' : [27.30,-29.18],'立陶宛' : [25.19,54.38],'卢森堡' : [6.09,49.37],
				'拉脱维亚' : [24.08,56.53],'摩尔多瓦' : [28.50,47.02],'马达加斯加' : [47.31,-18.55],'墨西哥' : [-99.10,19.20],'马其顿' : [21.26,42.01],'马里' : [-7.55,12.34],'缅甸' : [96.20,16.45],'莫桑比克' : [32.32,-25.58],'毛里塔尼亚' : [57.30,-20.10],'马拉维' : [33.48,-14.00],
				'马来西亚' : [101.41,3.09],'新加坡' : [104.01,1.49],'纳米比亚' : [17.04,-22.35],'新喀里多尼亚' : [166.30,-22.17],'尼日尔' : [2.06,13.27],'尼日利亚' : [7.32,9.05],'尼加拉瓜' : [-86.20,12.06],'荷兰' : [4.54,52.23],'挪威' : [10.45,59.55],'尼泊尔' : [85.20,27.45],
				'新西兰' : [174.46,-41.19],'阿曼' : [58.36,23.37],'巴基斯坦' : [73.10,33.40],'巴拿马' : [-79.25,9.00],'秘鲁' : [-77.00,-12.00],'菲律宾' : [121.03,14.40],'巴布亚新几内亚' : [147.08,-9.24],'波兰' : [21.00,52.13],'波多黎各' : [-66.07,18.28],'朝鲜' : [125.30,39.09],
				'葡萄牙' : [-9.10,38.42],'巴拉圭' : [-57.30,-25.10],'卡塔尔' : [51.35,25.15],'罗马尼亚' : [26.10,44.27],'俄罗斯' : [37.35,55.45],'卢旺达' : [30.04,-1.59],'沙特阿拉伯' : [46.42,24.41],'苏丹' : [32.35,15.31],'塞内加尔' : [-17.29,14.34],'所罗门群岛' : [159.57,-9.27],
				'塞拉利昂' : [-13.17,8.30],'萨尔瓦多' : [-89.10,13.40],'索马里' : [45.25,2.02],'苏里南' : [-55.10,5.50],'斯洛伐克' : [17.07,48.10],'斯洛文尼亚' : [14.33,46.04],'瑞典' : [18.03,59.20],'斯威士兰' : [31.06,-26.18],'叙利亚' : [36.18,33.30],'乍得' : [14.59,12.10],
				'多哥' : [1.20,6.09],'泰国' : [100.35,13.45],'塔吉克斯坦' : [68.48,38.33],'土库曼斯坦' : [57.50,38.00],'东帝汶' : [125.34,-8.29],'突尼斯' : [10.11,36.50],'土耳其' : [32.54,39.57],'坦桑尼亚' : [35.45,-6.08],'乌干达' : [32.30,0.20],'乌克兰' : [30.28,50.30],
				'乌拉圭' : [-56.11,-34.50],'美国' : [-77.02,39.91],'乌兹别克斯坦' : [69.10,41.20],'委内瑞拉' : [-66.55,10.30],'越南' : [105.55,21.05],'瓦努阿图' : [168.18,-17.45],'赞比亚' : [28.16,-15.28],'津巴布韦' : [31.02,-17.43],'蒙古' : [100.58,46.31],'中国（台湾）' : [121.18,24.01],
				'中国（澳门）' : [113.54,22.20],'中国（香港）' : [114.08,22.45],'安道尔' : [1.32,42.31],'安提瓜和巴布达' : [-61.48,17.20],'巴林' : [50.30,26.10],'巴巴多斯' : [-59.30,13.05],'马尔代夫' : [73.28,4.00],'萨摩亚' : [-170.43,-14.16],'佛得角' : [-23.34,15.02],'科摩罗' : [43.16,-11.40],
				'基里巴斯' : [173.00,1.30],'列支敦士登' : [9.31,47.08],'马耳他' : [14.31,35.54],'密克罗尼西亚' : [158.09,6.55],'帕劳' : [134.28,7.20],'圣基茨和尼维斯' : [-62.43,17.17],'圣卢西亚' : [-60.58,14.02],'圣文森特和格林纳丁斯' : [-61.10,13.10],
				'圣马力诺' : [12.30,43.55],'圣多美和普林西比' : [6.39,0.10],'汤加' : [-174.00,-21.10],'图瓦卢' : [179.13,-8.31],'英国' : [-0.05,51.36],
			}
        }

       // '萨摩亚' : [-171.50,-13.50],'多米尼加共和国' : [-61.24,15.20],

        this.updateRect = this.updateRect.bind(this);

        this.buildOption = this.buildOption.bind(this);

        this.loadMap = this.loadMap.bind(this);
        this.onLoadMap = this.onLoadMap.bind(this);

        this.convertData = this.convertData.bind(this);

         // 获取组件自身
         this.myRef = React.createRef();
    }

    convertData( data )
    {
        let res = [];

        for (let i = 0; i < data.length; i++) 
        {
            let coords = [];
            let fromGeoCoord = this.state.geoCoordMap[data[i].name];
            let toGeoCoord = this.state.geoCoordMap[data[i].sname];

            if( fromGeoCoord && toGeoCoord ) 
            {
                coords.push(fromGeoCoord);
                coords.push(toGeoCoord);

                let item = {...data[i]};
                item["coords"] = coords;
                res.push(item);
            }
        }
        
        return res;
    }

    loadMap( data )
    {
        const { mapName } = this.state;

        if( mapName!==data.mapName)
        {
            WidgetAjax.ajaxFile({url:'/app/map/' + data.mapName + ".json", callback:this.onLoadMap});
        }
    }

    onLoadMap( data )
    {
        
        if( data!==null )
        {
            let mapData = data;

            let option = this.buildOption(this.props.data, this.props.option, mapData);

            this.setState({chartOption:option, mapName:this.props.data.mapName});
        }
    }

    buildOption( data, chartOption, map)
    {    
       // const map = require('../map/' + data.mapName + ".json" )

        echarts.registerMap(data.mapName, map); 

        let config = {};

        if( chartOption.theme!==undefined )
        {
            config = {...WidgetEchartConfig.theme[chartOption.theme].mapFlowConfig, ...config};
        }
        else
        {
            config = {...WidgetEchartConfig.theme["default"].mapFlowConfig, ...config};
        }

        if( config.geo!==undefined )
        {
            config.geo['map'] = data.mapName;
        }

        if( config.series!==undefined )
        {
            for( let i in config.series)
            {
                config.series[i]['data'] = this.convertData(data.data);

                config.series[i]['tooltip'] = {
                    formatter: function (params) {
                        if( chartOption!==undefined && chartOption.tooltipFormatter!==undefined )
                        {
                            return chartOption.tooltipFormatter(params);
                        }
                        else
                        {
                            return params.name + ":" + params.value;
                        }    
                    }
                };
            }
        }
       
        return config;
    }


    updateRect()
    {
        if( this.myRef!==undefined && this.myRef.current!==null && this.myRef.current.ele!==undefined)
        {
            const height = this.myRef.current.ele.parentElement.clientHeight;
            const width = this.myRef.current.ele.parentElement.clientWidth;
            
            if (this.state.width !== width || this.state.height !== height)
            {
                this.setState({width:width, height:height});
            }
        }
    }

    componentDidMount()
    {
        this.updateRect();
    }

    componentDidUpdate()
    {
        this.updateRect();
    }

    render()
    {
        const { height, chartOption} = this.state;

        let { data } = this.props;

        this.loadMap(data);

       // option = this.buildOption(data, option);
       if( chartOption!==undefined && chartOption!==null )
       {
            return <ReactEcharts ref={this.myRef} option={ chartOption } lazyUpdate={true} style={{ height: height }}></ReactEcharts>
       }
       else
       {
        //    return <div className="widget-echart" style={{position:'relative'}}><img className="load" src={require('./../../img/profiles/load.gif')} /> </div>;
       }
        
    }
}

export default WidgetEchartMapFlow